/**  I Can  &  I Will  **/
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <cmath>
#include <stack>
#include <string>
#include <iomanip>
#include <queue>
#include <deque>
#include <cstring>
#include <limits>
#include <sstream>
#include <stdio.h>
#include<unordered_map>
#include <string>
#define   F     first
#define   S     second
#define all(x)  (x).begin(),(x).end()
#define lp(i,n) for(int i=0;i<n;i++)
#define pl(i,n) for(int i=n-1;i>=0;i--)
#define sz(x)  (int(x.size()))

#define ren(i,l,r) for(int i=l;i<=r;i++)
#define endl '\n'
typedef long long ll;
typedef long double ld;
using namespace std;

int dy[] = { 1, -1, 0, 0, -1, 1, 1, -1 };
int dx[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x % y); }
ll lcm(ll x, ll y) { return ((x / gcd(x, y)) * y); }


void file() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif  !ONLINEJUDGE
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
}
const int N = 300000;
/*
bool valid(int x, int y)
{
	return((x >= 0 && x < n) && (y >= 0 && y < n));
}
*/
vector<vector<int>>v(30000);
bool f = 0,vis[30000]; int c = 0;

void dfs(int n, int l)
{
	if(vis[n])
	{
		f = 1; return;
	}
	vis[n] = 1;

	for (int i = 0; i < sz(v[n]); i++)
	{
		if (v[n][i] != l)dfs(v[n][i], n);
	}

}

int main()
{
	file();
	//cout << fixed << setprecision(13);

	int n, m;
	cin >> n >> m;

	lp(i, m)
	{
		int l, r; cin >> l>>r;
		v[l].push_back(r);
		v[r].push_back(l);
		
	}

	ren(i, 1, n)
	{
		if (!vis[i])
		{
			c++;
			dfs(i, 0);
		}
	}

	if (c > 1 || f)cout << "NO\n";
	else cout << "YES\n";
}