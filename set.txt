#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#include<stack>
#include<set>
using namespace std;
int main()
{
	// Standard Template Library


	/*
	stack

	push
	pop
	top
	size
	empty

	*/

	stack<int> st;

	st.push(2);
	st.push(5);
	st.push(7);
	st.push(1);
	// 1 7 5 2
	// 7 5 2
	st.pop();
	cout << st.top() << endl;

	cout << st.empty() << endl;

	cout << st.size() << endl;

	/*
	set 

	decleration
	insert
	begin
	end
	erase
	find
	size
	iterate
	*/

	set<int>s;

	s.insert(1);
	s.insert(3);
	s.insert(4);
	s.insert(0);
	s.insert(10);
	s.insert(10);
	// 0 1 3 4 10

	cout << s.size() << endl;

	set<int> ::iterator it;
	auto it1 = s.begin();
	it = s.begin();

	cout << *it << endl;

	it = s.end();
	it--;
	cout << *it << endl;

	for (it = s.begin(); it != s.end(); it++){
		cout << *it << " ";
	}
	cout << endl;

	s.erase(5);

	s.erase(s.begin());

	it = s.end();
	it--;
	s.erase(it);

	// find

	it = s.find(5);

	// O(log N )

	if (it == s.end()){
		// not found
	}
	else {
		// find and it`s value *it
		// can`t get its index 

		int idx = 0;
		// 0 4 5 10 20 30
		for (it = s.begin(); it != s.end(); it++){
			if (*it == 5){
				break;
			}
			idx++;
		}
		cout << idx << endl;
	}

	s.erase(s.find(1));

	for (auto it : s){
		cout << it << endl;
	}


}